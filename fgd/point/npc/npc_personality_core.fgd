@PointClass base(TalkNPC) 
	appliesto(P2CE)
	studioprop() 
= npc_personality_core: "Aperture Science Personality Construct. Animated balls with handles."
	[
	modelskin[engine](integer) : "Model Skin" : 0
	modelskin(choices) : "Model Skin" : 0 : "The model skin to use with this entity. If the Original core type is selected, Wheatley's model will be used (0: broken; 1: clean).\n" + 
		"Specifying the Alternate core type will use an alternate personality core model for use with corrupted cores.\n" + 
		"Specifying the Custom core type will allow mappers to specify any skin for this NPC." =
		[
		0: "Wheatley (Damaged)"
		1: "Wheatley (Normal) / Adventure Core"
		2: "N/A / Space Core"
		3: "N/A / Fact Core"
		]

	// The name here is a bit misleading, but this is for a good reason
	// before it used to be a boolean, but we changed to an integer.
	// I kept the old name here for backwards compatibility.
	altmodel[engine](integer) : "Core Model Type" : 0
	altmodel(choices) : "Core Model Type" : 0 : "Was 'Use alternate skins'. Now determines which 'core type' to use." =
		[
		0: "Original"
		1: "Alternate"
		2: "Custom"
		]

	model[engine](studio) : "Model" : "models/npcs/personality_sphere/personality_sphere.mdl" 
	model(choices) : "[H] Model" : "models/npcs/personality_sphere/personality_sphere.mdl" : "Choose the model to show in Hammer.\n" +
		"Specifying the Alternate core type will make this NPC uses the corrupt core model.\n " +
		"Specifying the Custom core type will allow mappers to define their own personality core NPC models." =
		[
		"models/npcs/personality_sphere/personality_sphere.mdl": "Original (Wheatley)"
		"models/npcs/personality_sphere/personality_sphere_skins.mdl": "Alternate (Corrupt Cores)"
		]

	skin[engine](integer) : "Skin" : 0
	skin(choices) : "[H] Skin" : 0 : "The model skin to use with this entity, as displayed in Hammer. If the Original core type is selected, Wheatley's model will be used (0: broken; 1: clean).\n" + 
		"Specifying the Alternate core type will use an alternate personality core model for use with corrupted cores.\n" + 
		"Specifying the Custom core type will allow mappers to specify any skin for this NPC." =
		[
		0: "Wheatley (Damaged)"
		1: "Wheatley (Normal) / Adventure Core"
		2: "N/A / Space Core"
		3: "N/A / Fact Core"
		]

	flashlightcolor(color255) : "Flashlight Color" : "255 255 255 500" : "Specifies this core's flashlight color. See env_projectedtexture for documentation."
	flashlightfov(float) : "Flashlight FOV" : "85.0f" : "Specifies the field-of-view (FOV) for this core's flashlight. See env_projectedtexture for documentation."
	flashlightfarz(float) : "Flashlight Far-Z" : "750.0f" : "The maximum range (Far-Z) for this core's flashlight. See env_projectedtexture for documentation."

	// Inputs
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input EnableFlashlight(void) : "Enable the eye flashlight."
	input DisableFlashlight(void) : "Disable the eye flashlight."
	input ForcePickup(void) : "Force the player to pickup the sphere immediately."
	input EnablePickup(void) : "Allow player pickup."
	input DisablePickup(void) : "Disable player pickup."
	input PlayAttach(void) : "Play the attachment animation, used for syncing with the socket's animation."
	input PlayDetach(void) : "Play the detachment animation, used for syncing with the socket's animation."
	input PlayLock(void) : "Play the locking animation, used for syncing with the socket's animation."
	input SetIdleSequence(string) : "Set a sequence to use as an idle sequence."
	input ClearIdleSequence(void) : "Return to the default idle animation."
	input Explode(void) : "Explodes the sphere, triggering an explosion effect and some gibs. This is purely decorative and does not remove this NPC."

	// Outputs
	output OnPlayerPickup(void) : "Fired whenever the player picks up the core."
	output OnPlayerDrop(void) : "Fired whenever the player drops the core."
	]
