@PointClass base(BaseEntityPoint)
	studioprop() 
	iconsprite("editor/point_teleport.vmt") 
	line(255 255 255, targetname, target) 
= point_teleport: "An entity that teleports a target entity to this position and angles. " +
	"If 'Teleport Home' spawn flag is set, teleports the target entity to its spawn position instead. " +
	"If object is physically simulated, simulation is turned off when teleported."
	[
	target(target_destination) : "Entity To Teleport" : : "Name of the entity that will be teleported."
	model[!engine](studio) : "[H] Model" : "models/editor/angle_helper.mdl" : "The model shown in Hammer, to use for positioning."
	spawnflags(flags)  =
		[
		1: "Teleport Home" : 0
		2: "Into Duck (episodic)" : 0
		]

	UseDestinationAngles[MOMENTUM](boolean) : "Use Destination Angles" : 0 : "Forces the teleported object to snap to the angles of the destination."

	VelocityMode[MOMENTUM](choices) : "Velocity Mode" : 0 =
		[
		0 : "Keep Velocity"
		1 : "Reset Velocity"
		2 : "Keep Negative Z Velocity Only"
		3 : "Redirect Velocity"
		]

	SetSpeed[MOMENTUM](float) : "Redirect Velocity Speed" : 400 : "If Velocity Mode is set to Redirect Velocity, the entity's speed will be set to this amount when teleported. When this speed is <= 0, use the entity's current speed instead."

	// Inputs
	input Teleport(void) : "Teleport the target entity."
	input TeleportToCurrentPos(void) : "Teleport the target entity to wherever the point_teleport entity is currently. " +
		"The Teleport input teleports to the initial position of the point_teleport, " +
		"so this input was added to avoid breaking old content."
	input TeleportEntity(target_destination) : "Teleport the entity specified by the parameter override. " +
		"Use this to teleport an entity other than the one specified in the Entity To Teleport field."
	]
