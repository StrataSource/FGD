@PointClass base(BasePropPhysics) 
	appliesto(P2CE)
	studioprop() 
= prop_weighted_cube: "Aperture Science Weighted Cube. Presses floor buttons, and can be moved around."
	[
	line_cube[-engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""
	
	cubetype[engine](integer) : "Cube Type" : 0
	cubetype(choices) : "Cube Type" : "0" : "What cube type is this? Use a prop_monster_box for FrankenTurrets. " +
		"If set to Custom, use AddOutput to change it back OnMapSpawn so gel skins behave correctly." =
		[
		0: "[0] Weighted Storage Cube"
		1: "[1] Weighted Companion Cube"
		2: "[2] Discouragement Redirection Cube"
		3: "[3] Edgeless Safety Cube"
		4: "[4] Antique Storage Cube"
		5: "[5] Schrodinger's Cube"
		6: "[6] Custom model"
		]

	skintype[engine](boolean) : "Skin Type" : 0
	skintype(choices) : "Skin Type" : "0" : "Is the cube clean or rusty? Storage and Reflection cubes are the only types with a rusty version." =
		[
		0: "Clean"
		1: "Rusted"
		]

	model[engine](studio) : "Model" : ""
	model(choices) : "Model" : "models/props/metal_box.mdl" : "The model to show in Hammer, or a custom model for cube type 6." =
		[
		"models/props/metal_box.mdl": "Weighted Storage/Companion Cube"
		"models/props/reflection_cube.mdl": "Discouragement Redirection"
		"models/props_gameplay/mp_ball.mdl": "Edgeless Safety"
		"models/props_underground/underground_weighted_cube.mdl": "Antique"
		"models/props/schrodinger_cube.mdl": "Schrodinger"
		]

	skin(integer) : "Skin" : 0 : "The old skin property, mainly to show in Hammer. "

	paintpower[engine](integer) : "Starting Paint" : 4
	paintpower(choices) : "Starting paint" : "4" : "The cube starts painted with the set gel." =
		[
		0: "Repulsion Gel"
		1: "Adhesion Gel"
		2: "Propulsion Gel"
		3: "Conversion Gel"
		4: "None"
		]

	allowfunnel(boolean) : "Allow Portal Funneling" : 1 : "Whether or not this object should auto-funnel into a floor portal."
	newskins(integer) readonly : "Use new skins" : 1 : "Use the values in the Cube Type and Skin Type fields instead of the Skin(OLD) field. You shouldn't need to touch this."
	
	uselasermodifier(boolean) : "Use Laser Modifier" : 0 : "If enabled, this cube will recolor incoming lasers to the modifier color."
	reflectmodifycolor(choices) : "Laser Modifier Color" : "255 0 0 255" : "Set reflected lasers to this color. Only applicable to reflection and Schrodinger cubes. You can also specify a custom RGBA color here." =
		[
		"255 255 255 255" : "White"
		"255 0 0 255" : "Default Red"
		"100 255 100 255" : "Lethal Green"
		"32 112 202 255" : "Blue"
		"255 212 91 255" : "Yellow"
		"212 60 146 255" : "Pink"
		"65 97 0 255" : "Dark Green"
		]
	uselaserfilter(boolean) : "Use Laser Filter" : 0 : "If enabled, this cube can only redirect lasers that match the filter color. If disabled, any laser color can be redirected."
	reflectfiltercolor(choices) : "Laser Filter Color" : "255 0 0 255" : "Filter reflected lasers by this color. Only applicable to reflection and Schrodinger cubes. You can also specify a custom RGBA color here." =
		[
		"255 255 255 255" : "White"
		"255 0 0 255" : "Default Red"
		"100 255 100 255" : "Lethal Green"
		"32 112 202 255" : "Blue"
		"255 212 91 255" : "Yellow"
		"212 60 146 255" : "Pink"
		"65 97 0 255" : "Dark Green"
		]

	// Inputs
	input EnablePortalFunnel(void) : "Enable portal funneling behavior."
	input DisablePortalFunnel(void) : "Disable portal funneling behavior."
	input EnableMotion(void) : "Allow physics simulation."
	input DisableMotion(void) : "Prevent Physics simulation, freezing the cube in place."
	input SetPaint(integer) : "Force the cube to be painted with 0 (Repulsion), 2 (Propulsion), or 4 (No) gel."
	
	input Dissolve(void) : "Fizzles the cube, firing the OnFizzled output."
	input SilentDissolve(void) : "Kills the cube immediately and fires its OnFizzled output."
	input ExitDisabledState(void) : "Exits the disabled state of a reflective cube."

	input SetReflectModifyColor(color255) : "Changes the laser modifier colour of the cube."
	input SetReflectFilterColor(color255) : "Changes the laser filter colour of the cube."
	input EmitLaser(boolean) : "Makes this cube emit or stop emitting its own laser."
	input LockEmitState(boolean) : "Locks the current laser state of the cube. Can still be changed with EmitLaser."

	// Outputs
	output OnFizzled(void) : "Fired when a cube is fizzled."
	output OnOrangePickUp(void) : "P-Body picked up the cube."
	output OnBluePickUp(void) : "ATLAS picked up the cube."
	output OnPlayerPickup(void) : "Any player picked up the cube."
	output OnPhysGunDrop(void) : "Any player dropped the cube."
	output OnPainted(integer) : "Cube got painted, only if the state changed. Has the paint type as parameter."
	output OnPowered(void) : "Cube got powered by a laser."
	output OnUnpowered(void) : "Cube is no longer powered by a laser."
	output OnActivated(void) : "Fired when a cube is placed on a button."
	output OnDeactivated(void) : "Fired when a cube is removed from a button."
	]
