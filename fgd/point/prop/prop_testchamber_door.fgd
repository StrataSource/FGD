@PointClass base(BaseEntityAnimating)
	appliesto(P2CE)
	studioprop() 
	line(255 255 0, targetname, areaPortalWindow) 
	line(255 255 0, targetname, lightingorigin) 
	sphere(AreaPortalFadeStart) 
	sphere(AreaPortalFadeEnd) 
= prop_testchamber_door: "A door."
	[
	lightingorigin(target_destination) : "Lighting Origin" : : "Select an info_lighting to specify a location to sample lighting from for this door, instead of the origins."
	areaportalwindow(target_destination) : "Area Portal Window Name" : : "The name of an area portal window that is controlled by the door. When closed, the window will be forced shut"
	useareaportalfade(boolean) : "Fade Area Portal?" : 0 : "If the area portal should use the specified fade distances to fade out. Otherwise, it will be set to a distance of 10000 (effectively infinite)."
	areaportalfadestart(float) : "Fade Start Distance" : 0 : "The distance at which the area portal starts fading out."
	areaportalfadeend(float) : "Fade End Distance" : 0 : "The distance at which the area portal turns completely opaque."
	open(boolean) : "Start Open" : 0 : "If set, the door starts in the open state."
	locked(boolean) : "Start Locked" : 0 : "If set, the door starts locked and can no longer change open or closed state."

	skin(integer) : "Skin" : 0 : "Skin to use in game"
	model(studio) : "Model" : "models/props/portal_door_combined.mdl" : "Model to use in-game"

	// Temporary workaround for doors looping the close animation
	// Remove once https://github.com/StrataSource/Engine/issues/737 is implemented
	defaultanim(string) readonly : "<Default Animation>" : "idleclose" : "Ignore, needed to prevent the close animation from looping in Hammer"

	// Inputs
	input Open(void) : "Open the door and cause the areaportal to return to fading."
	input Close(void) : "Close the door and cause the areaportal to close."
	input LockOpen(void) : "Open the door and lock it in that state, so it will ignore further inputs."
	input Lock(void) : "Locking a door will prevent the Open or Close inputs from doing anything."
	input Unlock(void) : "If locked, unlocking a door will allow the Open or Close inputs to function."

	// Outputs
	output OnOpen(void) : "Called when the door has started its open animation."
	output OnClose(void) : "Called when the door has started its close animation."
	output OnFullyOpen(void) : "Called when the door has finished its open animation."
	output OnFullyClosed(void) : "Called when the door has finished its close animation."
	]
