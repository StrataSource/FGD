@PointClass base(BaseEntityPoint)
	color(200 0 0) 
	iconsprite("editor/env_global.vmt")
= env_global: "An entity that controls game-specific global states."
	[

	globalstate[engine](string) : "Global State to Set"
	globalstate(string) : "Global State to Set"

	globalstate[P2CE](choices) : "Global State to Set" =
		[
		"no_pinging_blue": "Disable Atlas's ping tool (Co-op)"
		"no_pinging_orange": "Disable P-body's ping tool (Co-op)"
		"no_taunting_blue": "Disable Atlas gestures (Co-op)"
		"no_taunting_orange": "Disable P-body gestures (Co-op)"
		"player_regenerates_health": "Disable player health regeneration"
		"slowtime_enabled": "Enable player usage of +slowtime"
		"gordon_precriminal": "Police neutrality towards player/citizens"
		"citizens_passive": "Citizen neutrality towards player/Combine NPCs"
		"gordon_invulnerable": "Player is invincible"
		"suit_no_sprint": "HEV suit sprint disabled"
		"friendly_encounter": "Lower player weapons"
		"no_seagulls_on_jeep": "Don't spawn seagulls on jeep"
		"antlion_allied": "Friendly antlions"
		"super_phys_gun": "Supercharged gravity gun enabled"
		"ep_alyx_darknessmode": "Lowlife \"darkness mode\" (Ep1)"
		"ep2_alyx_injured": "Debuffed Alyx Gun/\"Alyx Injured Mode\" (Ep2)"
		"hunters_to_run_over": "Hunter roadkills to dodge counter (Ep2)"
		]

	initialstate[engine](integer) : "Initial State" : 0 : "Controls the active state for this global. Setting this to \"Dead\" permanently disables this global, and will not persist during level transitions."
	initialstate(choices) : "Initial State" : 0 =
		[
		0: "Off"
		1: "On"
		2: "Dead"
		]

	counter(integer) : "Counter" : 0 : "An integer counter value associated with this global."
	spawnflags(flags) : "spawnflags" =
		[
		1: "Set Initial State" : 0
		]


	// Inputs
	input TurnOn(void) : "Turns on this global."
	input TurnOff(void) : "Turns off this global."
	input Toggle(void) : "Toggles state of global between ON and OFF."
	input Remove(void) : "Permanently disables this global and prevents it from persisting during level transitions."
	input SetCounter(integer) : "Sets the counter value of this global."
	input AddToCounter(integer) : "Adds to the counter value of this global. Negative numbers subtract."
	input GetCounter(void) : "Causes the Counter output to be fired, passing the current counter value for this global. This doesn't work properly."

	// Outputs
	// This counter output is overwritten by the KV above, making it non-functional. MBase fixes it.
	output Counter(integer) : "Fired in response to the GetCounter input, passing the current value of the counter."
	]
